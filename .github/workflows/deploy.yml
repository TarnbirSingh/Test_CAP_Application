name: CI/CD - SAP CAP to Cloud Foundry

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      MTAR_NAME: ${{ github.repository }}-${{ github.sha }}.mtar
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies (npm ci)
        run: |
          set -e
          echo "Installing dependencies with npm ci. If this fails, update your lockfile with 'npm install' locally and commit the changes."
          npm ci

      - name: Validate CDS models
        run: |
          set -e
          npx cds compile srv --to csn

      - name: Run tests (if present)
        run: |
          set -e
          npm run -s test --if-present

      - name: Build project (if present)
        run: |
          set -e
          npm run -s build --if-present

      - name: Install Cloud MTA Build Tool (mbt)
        run: |
          set -e
          npm install -g mbt
          mbt --version

      - name: Generate MTAR
        run: |
          set -e
          mkdir -p mta_archives
          mbt build -t mta_archives
          GEN_MTA=$(ls -1 mta_archives/*.mtar | head -n 1)
          if [ -z "$GEN_MTA" ]; then
            echo "No MTAR generated by mbt build"
            exit 1
          fi
          mkdir -p "$(dirname "${MTAR_NAME}")"
          cp "$GEN_MTA" "${MTAR_NAME}"
          ls -l "${MTAR_NAME}"

      - name: Upload MTAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: mtar
          path: ${{ env.MTAR_NAME }}
          if-no-files-found: error
          retention-days: 7

  deploy:
    name: Deploy to Cloud Foundry
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    env:
      MTAR_NAME: ${{ github.repository }}-${{ github.sha }}.mtar
      CF_API: ${{ secrets.CF_API }}
      CF_ORG: ${{ secrets.CF_ORG }}
      CF_SPACE: ${{ secrets.CF_SPACE }}
      CF_USERNAME: ${{ secrets.CF_USERNAME }}
      CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download MTAR artifact
        uses: actions/download-artifact@v4
        with:
          name: mtar
          path: .

      - name: Verify MTAR
        run: |
          set -e
          test -f "${MTAR_NAME}"
          ls -l "${MTAR_NAME}"

      - name: Install Cloud Foundry CLI v8
        run: |
          set -e
          CF_URL=$(curl -sL "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=8&source=github" | grep -o 'https://.*' || true)
          if [ -z "$CF_URL" ]; then
            echo "Failed to resolve CF CLI download URL"
            exit 1
          fi
          curl -sL "$CF_URL" -o cf-cli.tgz
          tar -xzf cf-cli.tgz
          sudo mv cf /usr/local/bin/cf
          cf version

      - name: Install CF Multiapps plugin
        run: |
          set -e
          cf install-plugin -f -r CF-Community "multiapps"
          cf plugins

      - name: Authenticate with Cloud Foundry
        env:
          CF_API: ${{ secrets.CF_API }}
          CF_ORG: ${{ secrets.CF_ORG }}
          CF_SPACE: ${{ secrets.CF_SPACE }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
        run: |
          set -e
          if [ -z "$CF_API" ] || [ -z "$CF_ORG" ] || [ -z "$CF_SPACE" ] || [ -z "$CF_USERNAME" ] || [ -z "$CF_PASSWORD" ]; then
            echo "Missing one or more required CF_* secrets"
            exit 1
          fi
          cf api "$CF_API" --skip-ssl-validation
          cf auth "$CF_USERNAME" "$CF_PASSWORD"
          cf target -o "$CF_ORG" -s "$CF_SPACE"

      - name: Deploy MTAR to Cloud Foundry
        run: |
          set -e
          cf deploy "${MTAR_NAME}" --no-confirm